// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  slug  String? @unique
  model Model[]
}

model Model {
  id         Int       @id @default(autoincrement())
  name       String?
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  products   Product[]
}

model Product {
  id             Int             @id @default(autoincrement())
  name           String?         @unique
  image          String[]
  description    Description?
  specifications Specifications?
  storage        String[]
  color          Color[]
  price          Int             @default(0)
  discountPrice  Int             @default(0)
  quantity       Int?
  status         String[]
  model          Model?          @relation(fields: [modelId], references: [id])
  modelId        Int?
}

model Description {
  feature   String[]
  news      String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int      @unique
}

model Specifications {
  id              Int     @id @default(autoincrement())
  brand           String?
  chip            String?
  display         String?
  ram             String?
  storage         String?
  camera          String?
  pin             String?
  operatingSystem String?
  SIM             String?
  product         Product @relation(fields: [productId], references: [id])
  productId       Int     @unique
}

model Color {
  id         Int     @id @default(autoincrement())
  color      String?
  colorPrice Int?
  quantity   Int?
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
}

model User {
  id           Int      @id @default(autoincrement())
  firstName    String?
  lastName     String?
  email        String?  @unique
  hashPassword String?
  isAdmin      Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
